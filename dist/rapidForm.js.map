{"version":3,"sources":["webpack://RapidForm/webpack/universalModuleDefinition","webpack://RapidForm/webpack/bootstrap","webpack://RapidForm/./helpers/typesInput.tsx","webpack://RapidForm/./helpers/typesManager.tsx","webpack://RapidForm/./helpers/validation.ts","webpack://RapidForm/./helpers/themes.tsx","webpack://RapidForm/./components/button/Button.tsx","webpack://RapidForm/./components/form/Form.tsx","webpack://RapidForm/./components/input/Text.tsx","webpack://RapidForm/./components/input/File.tsx","webpack://RapidForm/./components/select/Select.tsx","webpack://RapidForm/./containers/button/ButtonContainer.ts","webpack://RapidForm/./constants/input.ts","webpack://RapidForm/./types/action.ts","webpack://RapidForm/./reducers/form/form.ts","webpack://RapidForm/./containers/form/FormContainer.ts","webpack://RapidForm/./containers/input/TextContainer.ts","webpack://RapidForm/./containers/input/FileContainer.ts","webpack://RapidForm/./containers/select/SelectContainer.ts","webpack://RapidForm/./reducers/index.ts","webpack://RapidForm/./index.tsx"],"names":["root","factory","exports","module","define","amd","window","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fullfilled","j","depId","splice","__webpack_require__","s","installedModules","1","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","oldJsonpFunction","bind","slice","helpers_typesInput","type","props","key","theme","react","TextContainer","assign","data-key","FileContainer","undefined","console","error","warn","typesManager","typeCmp","cmp","formid","ButtonContainer","SelectContainer","children","otherProps","__rest","hasChild","Reflect","Array","isArray","nc","map","tc","valueOf","pc","typeChild","propsChild","newChildren","helpers_typesManager","analizeRequiredFields","formFields","submitResult","checker","cmps","propsCmps","toJS","required","validation_rest","requiredChild","nameChild","check","find","el","validation","method","val","immutable","split","set","helpers_themes","[object Object]","themeName","this","handleInputFile","inputFile","click","renderField","TextField_default","a","va","err","pr","themes_rest","Button_default","variant","onClick","FileUpload_default","ref","style","display","Typography_default","child","other","multiple","placeholder","withChip","multiCheckbox","deleteProperty","input","Input_default","id","inputProps","v","renderValue","selected","lab","k","Chip_default","label","join","material_ui_Form","Input","htmlFor","Select_default","renderMultipleSelect","native","options","option","checked","indexOf","Menu","Checkbox_default","List","primary","component","override","styles","Button_Button","handleRenderByTheme","_a","errors","allProps","Button_rest","themeClass","disabled","size","dispatch","propTypes","prop_types","className","isRequired","button_Button","Form_Form","renderByThemes","overrideTheme","renderByTheme","readChildren","prc","propsComponent","ps","handleSubmit","event","onSubmit","fields","checkAllReqFields","preventDefault","formElement","document","querySelector","form_serialize","hash","isEmpty","keys","isValid","setFields","setTheme","nextProps","content","form_Form","Text_Text","handleValidation","setCheckError","checkError","Text_rest","target","onChange","input_Text","File_Text","File_rest","files","File","Select_Select","Select_rest","select_Select","es","button","form","ownProps","constants_input","Action","payload","initialState","SET_FIELDS","SET_THEME","SET_ERRORS","SET_CHECK_ERROR","form_setFields","form_setTheme","form_checkAllReqFields","getState","valChild","reqChild","dataValidation","dataVal","field","typeError","e","setIn","filter","getIn","delete","analizeErrors","removeError","propsCmp","nwProps","analizeFields","newField","merge","update","form_form","state","action","fs","FormContainer","redux_es","form_namespaceObject","select","reducers","cps","redux_devtools_extension","lib_default","store","__webpack_exports__","index_rest"],"mappings":"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","file":"rapidForm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RapidForm\"] = factory();\n\telse\n\t\troot[\"RapidForm\"] = factory();\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1]\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fullfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fullfilled = false;\n \t\t\t}\n \t\t\tif(fullfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpRapidForm\"] = window[\"webpackJsonpRapidForm\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([163,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { FileContainer, TextContainer } from 'containers'\nimport * as React from 'react'\n\nconst typesInput = (type: string, props: any, key?: string, theme?: string) => {\n  switch (type) {\n    case 'text':\n    case 'password':\n    case 'email':\n    case 'hidden':\n      return <TextContainer key={key} data-key={key} {...props} />\n    case 'file':\n      return <FileContainer key={key} data-key={key} {...props} />\n    case undefined:\n      console.error('Warning: The prop `type` is marked as required, but its value is `undefined`')\n      return null\n    default:\n      console.warn(`Warning: This prop type='${type}' is not supported`)\n      return null\n  }\n}\n\nexport default typesInput\n","// import { TextContainer } from 'containers'\nimport { ButtonContainer, SelectContainer } from 'containers'\nimport * as React from 'react'\nimport typesInput from './typesInput'\n\ninterface IPropsTypes {\n  type?: string,\n  children?: any,\n  formid?: any\n}\n\nconst typesManager = (typeCmp: any|string, props: IPropsTypes, key?: string, cmp?: any): null|any => {\n  const { formid } = props\n  switch (typeCmp) {\n    case 'input':\n      const { type } = props\n      return typesInput(type, props, key)\n    case 'button':\n      return <ButtonContainer {...props} />\n    case 'select':\n      return <SelectContainer data-key={key} {...props} />\n    case undefined:\n      console.error('Warning: The prop `type` is marked as required, but its value is `undefined`')\n      return null\n    default:\n      const { children, ...otherProps } = props\n      const hasChild = Reflect.get(props, 'children')\n      if (Array.isArray(hasChild) && hasChild.length > 1) {\n        const nc = hasChild.map((c: any, i: any) => {\n          const tc = Reflect.get(c.valueOf(), 'type')\n          const pc = Reflect.get(c.valueOf(), 'props')\n          return typesManager(tc, {...pc, formid}, i, c)\n        })\n        return React.createElement(typeCmp, {...otherProps, key, formid}, nc)\n      }\n      if (typeof hasChild === 'string') {\n        return React.createElement(typeCmp, {...otherProps, key, formid}, hasChild)\n      }\n      const typeChild = Reflect.get(hasChild.valueOf(), 'type')\n      const propsChild = Reflect.get(hasChild.valueOf(), 'props')\n      const newChildren = typesManager(typeChild, {...propsChild, formid}, key, hasChild)\n      return React.createElement(typeCmp, {...otherProps, key, formid}, newChildren)\n  }\n}\n\nexport default typesManager\n","import { fromJS, List, Map } from 'immutable'\nimport * as React from 'react'\n\n/**\n * analizeFields\n * @param formFields any[]\n * @param removeError any\n * @param value string\n */\nexport const analizeFields = (formFields: any[], removeError?: any, value = '') => {\n  return formFields.map((cmps: any): any => {\n    const type = cmps.get('type')\n    const key = cmps.get('key')\n    const propsCmps = cmps.get('props').toJS()\n    const { children, ...propsCmp } = propsCmps\n    if (children) {\n      const { props } = children\n      if (Array.isArray(children)) {\n        // TODO: You must complete this part\n        return null\n      }\n      const nwProps = {...props, error: !removeError, value}\n      return fromJS(\n        React.createElement(type, {...propsCmp, key}, React.cloneElement(\n          children, nwProps\n        ))\n      )\n    }\n    const p = {...propsCmp, error: !removeError}\n    return fromJS(\n      React.createElement(type, {...p, key, value})\n    )\n  })\n}\n\nexport const analizeRequiredFields = (formFields: any, submitResult: any): any[] => {\n  const checker: any[] = []\n  formFields.map((cmps: any): any => {\n    const type = cmps.get('type')\n    const key = cmps.get('key')\n    const propsCmps = cmps.get('props').toJS()\n    const { children, required, name, ...propsCmp } = propsCmps\n    if (children) {\n      const { props } = children\n      const { required: requiredChild, name: nameChild } = props\n      if (Array.isArray(children)) {\n        // TODO: You must complete this part\n      }\n      if (requiredChild && !Reflect.get(submitResult, nameChild)) {\n        checker.push({name: nameChild, check: false})\n      } else if (name) {\n        checker.push({name: nameChild, check: true})\n      }\n    }\n    if (required && !Reflect.get(submitResult, name)) {\n      checker.push({name, check: false})\n    } else if (name) {\n      checker.push({name, check: true})\n    }\n  })\n  return checker.find((el: { check: any }): any => {\n    const { check } = el\n    if (check === false) {\n      return true\n    }\n    return false\n  })\n}\n\nexport const analizeErrors = (formid: string, key: number, name: string, errors: any, typeError: any) => {\n  const e = errors.get(formid)\n  if (typeError.size > 0) {\n    return errors.setIn([formid, key], fromJS({name, ...typeError.toJS()})).filter((v: any) => v !== undefined)\n  }\n  if (e && e.size > 0 && e.getIn([`${key}`, 'name']) === name) {\n    if (e.size === 1) {\n      return e.delete('0')\n    }\n    return errors.setIn([formid], e.delete(`${key}`))\n  }\n  return errors\n}\n\n/**\n * @param method string\n * @retutn any\n */\nconst validationMethod = (method: string, val: any): any => {\n  let r = Map()\n  const explodeMethod = method.split(',')\n  explodeMethod.map((m) => {\n    switch (m) {\n      case 'empty':\n      default:\n        if (val === '' || val === undefined || Array.isArray(val) && val.length === 0) {\n          r = r.set(m, true)\n        }\n        break\n    }\n  })\n  return r\n}\n\nexport default validationMethod\n","import FileUpload from 'material-ui-icons/FileUpload'\nimport Button from 'material-ui/Button'\nimport Checkbox from 'material-ui/Checkbox'\nimport Chip from 'material-ui/Chip'\nimport { FormControl } from 'material-ui/Form'\nimport Input, { InputLabel } from 'material-ui/Input'\nimport { ListItemText } from 'material-ui/List'\nimport Menu, { MenuItem } from 'material-ui/Menu'\nimport Select from 'material-ui/Select'\nimport { createMuiTheme, MuiThemeProvider } from 'material-ui/styles'\nimport TextField from 'material-ui/TextField'\nimport Typography from 'material-ui/Typography'\nimport * as React from 'react'\n\n/**\n * Themes\n */\nclass Themes {\n  private themeName: string\n  constructor (themeName: string) {\n    this.themeName = themeName\n  }\n  public renderByTheme (component: any, override = {}): JSX.Element {\n    switch (this.themeName) {\n      case 'material-ui':\n        const theme = createMuiTheme(override)\n        // Old material-UI\n        return (\n          <div>\n            <MuiThemeProvider theme={theme}>{component}</MuiThemeProvider>\n          </div>\n        )\n        // return component\n      default:\n        return component\n    }\n  }\n  private handleInputFile = (): void => {\n    this.inputFile.click()\n  }\n  private renderField = (type: string, props: any, cmp?: any): JSX.Element => {\n    switch (this.themeName) {\n      case 'material-ui':\n        switch (type) {\n          case 'text':\n          case 'email':\n          case 'password':\n          case 'hidden':\n            const { value: val } = props\n            return <TextField type={type} {...props} value={val || ''} />\n          case 'file':\n            const { value: va, error: err, ...pr } = props\n            return (\n              <div>\n                <Button variant='raised' onClick={this.handleInputFile}>\n                  {'upload'}\n                  <FileUpload />\n                  <input\n                    ref={(r) => {this.inputFile = r}}\n                    style={{ display: 'none' }}\n                    type={type}\n                    {...pr}\n                  />\n                </Button>\n                <Typography type='subheading'>{va || ''}</Typography>\n              </div>\n            )\n          case 'button':\n            const { children: child , ...other } = props\n            return <Button {...other}>{child}</Button>\n          case 'select':\n            const { children , ...p } = props\n            const { multiple, value, placeholder, withChip, multiCheckbox, error, required } = p\n            Reflect.deleteProperty(p, 'withChip')\n            Reflect.deleteProperty(p, 'multiCheckbox')\n            const input = <Input id='select-placeholder' />\n            const inputProps = { required }\n            if (multiple) {\n              Reflect.deleteProperty(p, 'value')\n              const v = value === '' || !value ? [] : value\n              const renderValue = !withChip\n                ? (selected: any) => selected.join(', ')\n                : (selected: any): any => {\n                  if (selected) {\n                    return selected.map((lab: any, k: number) => {\n                      return <Chip key={k} label={lab} />\n                    })\n                  }\n                  return []\n                }\n              return !placeholder\n                ? (\n                  <Select value={v} renderValue={renderValue} inputProps={inputProps} {...p}>\n                    {this.renderMultipleSelect(children, v, multiCheckbox)}\n                  </Select>\n                ) : (\n                  <FormControl error={error}>\n                    <InputLabel htmlFor='select-placeholder'>{placeholder}</InputLabel>\n                    <Select inputProps={inputProps} value={v} renderValue={renderValue} input={input} {...p}>\n                      {this.renderMultipleSelect(children, v, multiCheckbox)}\n                    </Select>\n                  </FormControl>\n                )\n            }\n            return !placeholder\n              ? <Select native inputProps={inputProps} {...p}>{children}</Select>\n              : (\n                <FormControl error={error}>\n                  <InputLabel htmlFor='select-placeholder'>{placeholder}</InputLabel>\n                  <Select native input={input} inputProps={inputProps} {...p}>{children}</Select>\n                </FormControl>\n              )\n          default:\n            return cmp\n        }\n      default:\n        return cmp\n    }\n  }\n  private renderMultipleSelect = (options: any, val: any[], multiCheckbox?: boolean): any[] => {\n    const opts = Array.isArray(options) ? options : [options]\n    return opts.map((option: any, key: number): JSX.Element => {\n      const { props } = option\n      const { value, children, ...other } = props\n      const checked = Array.isArray(val) ? val.indexOf(value) > -1 : false\n      return multiCheckbox ? (\n        <MenuItem key={key} value={value} {...other}>\n          <Checkbox checked={checked} />\n          <ListItemText primary={children} />\n        </MenuItem>\n      ) : (\n        <MenuItem key={key} value={value} {...other}>\n          <ListItemText primary={children} />\n        </MenuItem>\n      )\n    })\n  }\n}\n\nexport default Themes\n","import { Themes } from 'helpers'\nimport { Map } from 'immutable'\nimport * as PropTypes from 'prop-types'\nimport * as React from 'react'\nimport { callbackOnClick } from 'types'\n\n/**\n * @export\n * @interface IProps\n */\nexport interface IProps {\n  children?: any,\n  className?: string,\n  key?: string,\n  name?: string,\n  formid: string,\n  type: string,\n  theme: string,\n  dispatch?: () => void,\n  style?: object,\n  onClick?: callbackOnClick,\n  errors?: any\n}\n\n/**\n * @class Button\n * @extends {React.Component<IProps, any>}\n */\nclass Button extends React.Component<IProps, any> {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element\n    ]),\n    className: PropTypes.string,\n    errors: PropTypes.instanceOf(Map),\n    formid: PropTypes.string.isRequired,\n    key: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    name: PropTypes.string,\n    style: PropTypes.object,\n    theme: PropTypes.string,\n    type: PropTypes.oneOf([\n      'submit', 'reset', 'button', 'menu'\n    ]).isRequired\n  }\n  public render (): JSX.Element {\n    const { dispatch, children, ...allProps } = this.props\n    return this.handleRenderByTheme()\n  }\n  private handleRenderByTheme = (): JSX.Element => {\n    const { children, theme, errors, formid, ...allProps } = this.props\n    const themeClass = new Themes(theme)\n    const disabled = errors.get(formid) && errors.get(formid).size > 0\n    const p = { ...allProps, disabled }\n    const cmp = <button {...p}>{children}</button>\n    return themeClass.renderField('button', {...p, children}, cmp)\n  }\n}\n\nexport default Button\n","import * as serialize from 'form-serialize'\nimport { analizeRequiredFields, Themes, typesManager } from 'helpers'\nimport { List, Map } from 'immutable'\nimport * as PropTypes from 'prop-types'\nimport * as React from 'react'\nimport { callbackSubmit } from 'types'\n\n/**\n * @interface IFormProps\n */\ninterface IFormProps {\n  error?: any[],\n  id: string,\n  method: string,\n  key?: string,\n  name?: string,\n  disabled?: boolean\n  onSubmit?: callbackSubmit,\n  children?: [React.ReactNode, any[]],\n  fields?: any,\n  setFields?: (fields: any[], id: string) => void,\n  setTheme?: (theme: string) => void,\n  overrideTheme?: object,\n  checkAllReqFields?: (id: string) => void,\n  theme: string\n}\n\n/**\n * Main component\n * @class Form\n * @extends {React.Component<IFormProps, any>}\n */\nclass Form extends React.Component<IFormProps, any> {\n  static propTypes = {\n    checkAllReqFields: PropTypes.func.isRequired,\n    fields: PropTypes.instanceOf(Map),\n    id: PropTypes.string.isRequired,\n    method: PropTypes.oneOf(['get', 'post']).isRequired,\n    onSubmit: PropTypes.func,\n    overrideTheme: PropTypes.object,\n    setFields: PropTypes.func.isRequired,\n    setTheme: PropTypes.func.isRequired,\n    theme: PropTypes.oneOf(['material-ui'])\n  }\n  componentDidMount (): void {\n    const { fields, setFields, setTheme, theme, id } = this.props\n    if (fields instanceof Map) {\n      setFields(this.readChildren(), id)\n    }\n    if (theme) {\n      setTheme(theme)\n    }\n  }\n  componentWillUpdate (nextProps: any): void {\n    const { fields, setFields } = this.props\n    const { id } = nextProps\n    const f = fields.find((v: any, k: any) => k === id)\n    if (!f && fields.size > 0) {\n      setFields(this.readChildren(), id)\n    }\n  }\n  public render (): any {\n    const { children, id, name, fields, onSubmit, method } = this.props\n    const content = fields.get(id) ? fields.get(id).toJS() : null\n    return this.renderByThemes((\n      <form key={id} id={id} name={name || id} method={method} onSubmit={this.handleSubmit}>\n        {content}\n      </form>\n    ))\n  }\n  private renderByThemes = (cmp: JSX.Element) => {\n    const { theme, overrideTheme } = this.props\n    const themes = new Themes(theme)\n    return themes.renderByTheme(cmp, overrideTheme)\n  }\n  private readChildren = (): any[] => {\n    const { children, id, key, theme } = this.props\n    if (children.length > 1) {\n      return children.map((i, k) => {\n        const prc = Reflect.get(i.valueOf(), 'props')\n        const typeCmp = Reflect.get(i.valueOf(), 'type')\n        const p = {...prc, formid: id}\n        return typesManager(typeCmp, p, `${k}`, i)\n      })\n    }\n    const propsComponent = Reflect.get(children.valueOf(), 'props')\n    const type = Reflect.get(children.valueOf(), 'type')\n    const ps = {...propsComponent, formid: id}\n    return [typesManager(type, ps, !key && id)]\n  }\n  private handleSubmit = (event: any): void => {\n    const { onSubmit, id, fields, checkAllReqFields } = this.props\n    event.preventDefault()\n    const formElement = document.querySelector(`#${id}`)\n    const data = serialize(formElement, { hash: true })\n    const nElement = Object.keys(data).length\n    const isEmpty = nElement === 0\n    const isValid = analizeRequiredFields(fields.get(id), data)\n    if (typeof onSubmit === 'function' && !isEmpty && isValid === undefined) {\n      return onSubmit(event, data)\n    }\n    checkAllReqFields(id)\n  }\n}\n\nexport default Form\n","import { Themes, validationMethod } from 'helpers'\nimport { Map } from 'immutable'\nimport * as PropTypes from 'prop-types'\nimport * as React from 'react'\nimport { callbackOnClick, setCheckError } from 'types'\n\nexport interface ITextProps {\n  children?: any,\n  className?: string,\n  key?: string,\n  name?: string,\n  type: string,\n  value?: string,\n  theme?: string,\n  onClick?: callbackOnClick,\n  setCheckError?: setCheckError\n}\n\nclass Text extends React.Component<ITextProps, any> {\n  static propTypes = {\n    className: PropTypes.string,\n    key: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    name: PropTypes.string,\n    setCheckError: PropTypes.func,\n    style: PropTypes.object,\n    theme: PropTypes.string,\n    type: PropTypes.oneOf([\n      'text', 'password', 'email', 'hidden'\n    ]).isRequired\n  }\n  public render (): JSX.Element {\n    return this.handleRenderByTheme()\n  }\n  private handleValidation = (event: any): any => {\n    const { setCheckError: checkError, ...props } = this.props\n    const method = Reflect.get(this.props, 'data-validation')\n    const val = Reflect.get(event.target, 'value')\n    const required = Reflect.get(props, 'required')\n    const key = Reflect.get(props, 'data-key')\n    const isValid = validationMethod(method, val)\n    if (!method || !required) {\n      return checkError({...props, value: val}, key, Map())\n    }\n    checkError({...props, value: val}, key, isValid)\n  }\n  private handleRenderByTheme = (): JSX.Element => {\n    const { setCheckError: checkError, theme, type, ...allProps } = this.props\n    const themeClass = new Themes(theme)\n    const cmp = <input {...allProps} onChange={this.handleValidation} />\n    const props = { onChange: this.handleValidation, ...allProps }\n    return themeClass.renderField(type, props, cmp)\n  }\n}\n\nexport default Text\n","import { Themes, validationMethod } from 'helpers'\nimport { Map } from 'immutable'\nimport * as PropTypes from 'prop-types'\nimport * as React from 'react'\nimport { callbackOnClick, setCheckError } from 'types'\n\nexport interface ITextProps {\n  children?: any,\n  className?: string,\n  key?: string,\n  name?: string,\n  type: string,\n  value?: string,\n  theme?: string,\n  onClick?: callbackOnClick,\n  setCheckError?: setCheckError\n}\n\nclass Text extends React.Component<ITextProps, any> {\n  static propTypes = {\n    className: PropTypes.string,\n    key: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    name: PropTypes.string,\n    setCheckError: PropTypes.func,\n    style: PropTypes.object,\n    theme: PropTypes.string,\n    type: PropTypes.oneOf(['file']).isRequired\n  }\n  public render (): JSX.Element {\n    return this.handleRenderByTheme()\n  }\n  private handleValidation = (event: any): any => {\n    const { setCheckError: checkError, ...props } = this.props\n    const method = Reflect.get(this.props, 'data-validation')\n    const val = Reflect.get(event.target.files[0], 'name')\n    const required = Reflect.get(props, 'required')\n    const key = Reflect.get(props, 'data-key')\n    const isValid = validationMethod(method, val)\n    if (!method || !required) {\n      return checkError({...props, value: val}, key, Map())\n    }\n    checkError({...props, value: val}, key, isValid)\n  }\n  private handleRenderByTheme = (): JSX.Element => {\n    const { setCheckError: checkError, theme, type, ...allProps } = this.props\n    const themeClass = new Themes(theme)\n    const cmp = <input {...allProps} onChange={this.handleValidation} />\n    const props = { onChange: this.handleValidation, ...allProps }\n    return themeClass.renderField(type, props, cmp)\n  }\n}\n\nexport default Text\n","import { Themes, validationMethod } from 'helpers'\nimport { Map } from 'immutable'\nimport * as PropTypes from 'prop-types'\nimport * as React from 'react'\nimport { callbackOnClick, setCheckError } from 'types'\n\n/**\n * @export\n * @interface IProps\n */\nexport interface IProps {\n  children?: any,\n  className?: string,\n  key?: string,\n  name?: string,\n  type: string,\n  theme: string,\n  dispatch?: () => void,\n  setCheckError?: setCheckError,\n  style?: object,\n  onClick?: callbackOnClick,\n  errors?: any\n}\n\n/**\n * @class Select\n * @extends {React.Component<IProps, any>}\n */\nclass Select extends React.Component<IProps, any> {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n      PropTypes.array\n    ]),\n    className: PropTypes.string,\n    errors: PropTypes.instanceOf(Map),\n    key: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    name: PropTypes.string,\n    setCheckError: PropTypes.func,\n    style: PropTypes.object,\n    theme: PropTypes.string\n  }\n  public render (): JSX.Element {\n    const { dispatch, children, ...allProps } = this.props\n    return this.handleRenderByTheme()\n  }\n  private handleValidation = (event: any): any => {\n    const { setCheckError: checkError, ...props } = this.props\n    const method = Reflect.get(this.props, 'data-validation')\n    const val = Reflect.get(event.target, 'value')\n    const required = Reflect.get(props, 'required')\n    const key = Reflect.get(props, 'data-key')\n    const isValid = validationMethod(method, val)\n    if (!method || !required) {\n      return checkError({...props, value: val}, key, Map())\n    }\n    checkError({...props, value: val}, key, isValid)\n  }\n  private handleRenderByTheme = (): JSX.Element => {\n    const { setCheckError: checkError, children, theme, errors, ...allProps } = this.props\n    const themeClass = new Themes(theme)\n    const cmp = <select {...allProps}>{children}</select>\n    const props = { onChange: this.handleValidation, ...allProps }\n    return themeClass.renderField('select', {...props, children}, cmp)\n  }\n}\n\nexport default Select\n","import { Button } from 'components'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\ninterface IState {\n  button: object,\n  form: {\n    theme: string,\n    errors: any\n  }\n}\n\nconst mapStateToProps = ({ button, form: { theme, errors } }: IState, props: any): any => {\n  return { ...button, ...props, theme, errors }\n}\n\nconst mapDispatchToProps = (dispatch: any, ownProps: any): any => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Button)\n","const inputTypes: any[] = ['text', 'password']\nexport default inputTypes\n","interface IActionForm {\n  id?: string,\n  payload: any,\n  type: string,\n  fields?: any,\n  theme?: string,\n  errors?: any\n}\n\nexport const Action: IActionForm = {\n  payload: null,\n  type: ''\n}\n","import { inputTypes } from 'constants'\nimport { analizeErrors, analizeFields, validationMethod } from 'helpers'\nimport { fromJS, Map } from 'immutable'\nimport { Action } from 'types'\n\ninterface IFormInitialState {\n  errors: any,\n  fields: any,\n  theme: string\n}\n\nconst initialState: IFormInitialState = {\n  errors: Map(),\n  fields: Map(),\n  theme: ''\n}\n\nconst SET_FIELDS = 'SET_FIELDS'\nconst SET_THEME = 'SET_THEME'\nconst SET_ERRORS = 'SET_ERRORS'\nconst SET_CHECK_ERROR = 'SET_CHECK_ERROR'\n\nexport const setFields = (fields: any[], id: string): object => {\n  return {\n    fields: fromJS(fields),\n    id,\n    type: SET_FIELDS\n  }\n}\n\nexport const setTheme = (theme: string): object => {\n  return {\n    theme,\n    type: SET_THEME\n  }\n}\n\nexport const checkAllReqFields = (id: string) => {\n  return (dispatch: any, getState: any) => {\n    const { form: { fields } } = getState()\n    debugger\n    fields.get(id).map((cmps: any): void => {\n      const key = cmps.get('key')\n      const propsCmps = cmps.get('props').toJS()\n      const { children } = propsCmps\n      if (children) {\n        if (Array.isArray(children)) {\n          // TODO: You must complete this part\n          return null\n        }\n        const propsChild = Reflect.get(children, 'props')\n        const { value: valChild, type: typeChild, required: reqChild } = propsChild\n        if (!inputTypes.find((i: any) => i === typeChild) && !reqChild) {\n          return null\n        }\n        const dataValidation = Reflect.get(propsChild, 'data-validation')\n        dispatch(\n          setCheckError(propsChild, key, validationMethod(dataValidation, valChild))\n        )\n      }\n      const { value, type, required } = propsCmps\n      if (!inputTypes.find((i: any) => i === type) && !required) {\n        return null\n      }\n      const dataVal = Reflect.get(propsCmps, 'data-validation')\n      dispatch(\n        setCheckError(propsCmps, key, validationMethod(dataVal, value))\n      )\n    })\n  }\n}\n\nexport const setCheckError = (field: any, key: any, typeError: any): object => {\n  return (dispatch: any, getState: any): any => {\n    const errors = getState().form.errors\n    const { name, value, formid } = field\n    dispatch({\n      errors: analizeErrors(formid, key, name, errors, typeError),\n      type: SET_ERRORS\n    })\n    const fields = fromJS(getState().form.fields.get(formid))\n    const formFields = fields.filter((i: any) => i.get('key') === key)\n    const cmp = analizeFields(formFields, typeError.size === 0, value)\n    const newField = formFields.merge(cmp)\n    const newFields = fields.update(key, () => fromJS(newField.toJS()[0]))\n    return dispatch({\n      fields: newFields,\n      id: formid,\n      type: SET_CHECK_ERROR\n    })\n  }\n}\n\nexport default function form (state = initialState, action = Action): any {\n  const { type, fields, theme, errors, id } = action\n  switch (type) {\n    case SET_FIELDS:\n    case SET_CHECK_ERROR:\n      const fs = state.fields.set(id, fields)\n      return {...state, fields: fs}\n    case SET_ERRORS:\n      return {...state, errors}\n    case SET_THEME:\n      return {...state, theme}\n    default:\n      return state\n  }\n}\n","import { Form } from 'components'\nimport { connect } from 'react-redux'\nimport * as formActionCreators from 'reducers/form/form'\nimport { bindActionCreators } from 'redux'\n\ninterface IState {\n  form: object\n}\n\nconst mapStateToProps = ({ form }: IState, props: any): any => {\n  return { ...form, ...props }\n}\n\nconst mapDispatchToProps = (dispatch: any) => bindActionCreators({\n  ...formActionCreators\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form)\n","import { Text } from 'components'\nimport { connect } from 'react-redux'\nimport { setCheckError } from 'reducers/form/form'\nimport { bindActionCreators } from 'redux'\n\ninterface IState {\n  input: object,\n  form: {\n    theme: string\n  }\n}\n\nconst mapStateToProps = ({ input, form: { theme } }: IState, props: any): any => {\n  return { ...input, ...props, theme }\n}\n\nconst mapDispatchToProps = (dispatch: any): any => bindActionCreators({setCheckError}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Text)\n","import { File } from 'components'\nimport { connect } from 'react-redux'\nimport { setCheckError } from 'reducers/form/form'\nimport { bindActionCreators } from 'redux'\n\ninterface IState {\n  input: object,\n  form: {\n    theme: string\n  }\n}\n\nconst mapStateToProps = ({ input, form: { theme } }: IState, props: any): any => {\n  return { ...input, ...props, theme }\n}\n\nconst mapDispatchToProps = (dispatch: any): any => bindActionCreators({setCheckError}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(File)\n","import { Select } from 'components'\nimport { connect } from 'react-redux'\nimport { setCheckError } from 'reducers/form/form'\nimport { bindActionCreators } from 'redux'\n\ninterface IState {\n  select: object,\n  form: {\n    theme: string,\n    errors: any\n  }\n}\n\nconst mapStateToProps = ({ select, form: { theme, errors } }: IState, props: any): any => {\n  return { ...select, ...props, theme, errors }\n}\n\nconst mapDispatchToProps = (dispatch: any): any => bindActionCreators({setCheckError}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Select)\n","import { combineReducers } from 'redux'\nimport { default as form } from './form/form'\n\nexport default combineReducers({\n  form\n})\n","import { FormContainer } from 'containers'\nimport * as React from 'react'\nimport { Provider } from 'react-redux'\nimport reducers from 'reducers'\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nconst cps = composeWithDevTools(applyMiddleware(thunk))\nconst store = createStore(reducers, cps)\n\nclass RapidForm extends React.Component<any, any> {\n  public render (): JSX.Element {\n    const { children, ...props } = this.props\n    return (\n      <Provider store={store}>\n        <FormContainer {...props}>\n          {children}\n        </FormContainer>\n      </Provider>\n    )\n  }\n}\n\nexport default RapidForm\n"],"sourceRoot":""}